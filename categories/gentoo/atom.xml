<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: gentoo | Get9]]></title>
  <link href="http://n0b0dy.github.io/categories/gentoo/atom.xml" rel="self"/>
  <link href="http://n0b0dy.github.io/"/>
  <updated>2013-11-18T19:43:01+07:00</updated>
  <id>http://n0b0dy.github.io/</id>
  <author>
    <name><![CDATA[n0b0dy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gentoo deploy tools обзор]]></title>
    <link href="http://n0b0dy.github.io/2013/01/22/gentoo-deploy-tools-review/"/>
    <updated>2013-01-22T19:45:00+07:00</updated>
    <id>http://n0b0dy.github.io/2013/01/22/gentoo-deploy-tools-review</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/n0b0dy/gentoo-deploy-tools">Gentoo deploy tools</a> - набор маленьких скриптов версии 0.5.0 для облегчения начальной установки Gentoo, чтобы во время разворачивания не делать множество телодвижений.</p>

<!-- more -->


<p>Устанавливаются они по умолчанию в $HOME/.gdt и помощью инсталлятора на bash.
Устанавливать можно 2 способами:</p>

<pre><code>    $ eval "$(wget -O- http://bit.ly/gdt-git)"
    $ eval "$(wget -O- https://raw.github.com/n0b0dy/gentoo-deploy-tools/master/gdt-installer)" 
</code></pre>

<h2>gmirror</h2>

<p>Простенькая тулза для показа зеркал с гентой.
По умолчанию выводит только http зеркала. Чтобы показать все зеркала набираем:</p>

<pre><code>    $ gmirror -p ftp,http,rsync 
</code></pre>

<p>Для поиска по названию и номеру есть есть флаг -s</p>

<pre><code>    $ gmirror -s/yandex/ #=&gt; http://mirror.yandex.ru/gentoo-distfiles/
    $ gmirror -s95       #=&gt; http://mirror.yandex.ru/gentoo-distfiles/
</code></pre>

<p>флаг -n пронумерует все зеркала.</p>

<h2>glist</h2>

<p>Для установки нужно stage3 и portage. glist покажет их url и вы можете их скачать через wget или curl либо gstrap
glist умеет искать только по ftp и http зеркалам. По умолчанию поиск использует архитектуру ядра под которой вы загружены, предполагая что и устанавливать вы будите на туже архитектуру.
Поиск по стейджам  ключ -s, по портежам ключ -p.</p>

<pre><code>    $ glist -s -p
</code></pre>

<p>Также можно использовать номер в списке или регулярное выражение.</p>

<pre><code>    $ glist -s2
    $ glist -p/latest/
</code></pre>

<p>чтобы пронумеровать вывод также как и с gmirrors есть ключ -n.</p>

<ul>
<li>-m задает зеркало где производится поиск.</li>
<li>-a Указывает на архитектуру, по умолчанию такой же как и ваша текущая архитектура ядра.</li>
</ul>


<p>Показанные url можно записать в переменные окружения.</p>

<h2>gstrap</h2>

<p>Скачивает stage3, portage и распаковывает в указанную директорию.
Скачать и распаковать stage3, portage в /mnt</p>

<pre><code>    $ gstrap -s stage_url -p portage_url /mnt
</code></pre>

<p>Урлы показывает команда glist.</p>

<h2>gchroot</h2>

<p>Чтобы при создании chroot не монтировать руками /proc, /sys, /dev, /tmp и не копировать resolv.conf.
Утилита gchroot, которая сделает это все за вас.
Создать chroot окружение и войдет в него.</p>

<pre><code>    $ gchroot /mnt/dev
</code></pre>

<p>Просто создаст chroot окружение и входить нужно будет уже ручками.</p>

<pre><code>    $ gchroot -m /mnt 
</code></pre>

<p>Удобно от монтировать все дерево фс можно командой.</p>

<pre><code>    $ umount -l /mnt
</code></pre>

<h2>Итого</h2>

<p>Для быстрой установки если вас устраивает зеркало яндекса можно просто использовать glist и gstrap.</p>

<pre><code>    $ export stage3=$(glist -s1)         #присваиваем url stage3 переменной
    $ export portage=$(glist -p/latest/) #присваиваем url portage переменной
    $ mount /dev/sd[x] /mnt              #монтируем партицию
    $ gstrap -s $stage3 -p $portage /mnt #загружаем и распаковываем stage3,portage
    $ gchroot /mnt                       #входим в chroot окружение
</code></pre>

<p>дальше уже компиляция ядра, установка grub2 и настройки самой системы.</p>
]]></content>
  </entry>
  
</feed>
